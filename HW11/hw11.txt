Script started on Wed 02 Nov 2022 05:15:07 PM CDT
polk:vu0062> pwd
/oushomes/Student/vu0062/CS1313
polk:vu0062> ls -l
total 244
drwx------. 2 vu0062 students  4096 Nov  2 17:15 .
drwx-----x. 9 vu0062 students  4096 Oct  4 02:09 ..
-rw-r--r--. 1 vu0062 students  6171 Oct 25 16:12 absvalbytype.c
-rw-r--r--. 1 vu0062 students  3483 Sep 28 13:08 circlecalc.c
-rw-r--r--. 1 vu0062 students  5587 Oct  4 16:46 conversions.c
-rw-r--r--. 1 vu0062 students  2238 Nov  2 17:14 hw11.c
-rw-r--r--. 1 vu0062 students     0 Nov  2 17:15 hw11.txt
-rw-r--r--. 1 vu0062 students 26631 Oct 25 16:25 italian.c
-rw-r--r--. 1 vu0062 students 26630 Oct 25 16:24 italian.c~
-rw-r--r--. 1 vu0062 students   677 Nov  2 17:07 makefile
-rw-r--r--. 1 vu0062 students   664 Nov  2 17:06 makefile~
-rw-r--r--. 1 vu0062 students  3908 Aug 27 16:36 my_number.c
-rw-r--r--. 1 vu0062 students  3908 Aug 27 16:35 my_number.c~
-rw-r--r--. 1 vu0062 students  5594 Aug 29 11:03 pp1.txt
-rw-r--r--. 1 vu0062 students  4247 Sep 19 17:47 pp2_example.txt
-rw-r--r--. 1 vu0062 students  9186 Oct  4 16:50 pp3_conversions.txt
-rw-r--r--. 1 vu0062 students  5469 Sep 28 15:17 pp3_example.txt
-rw-r--r--. 1 vu0062 students 24656 Oct  4 16:57 pp3_statistics.txt
-rw-r--r--. 1 vu0062 students  9398 Oct 25 16:17 pp4_example.txt
-rw-r--r--. 1 vu0062 students 38125 Oct 25 16:39 pp4.txt
-rw-r--r--. 1 vu0062 students  2808 Sep 19 13:59 read_list.c
-rw-r--r--. 1 vu0062 students 19133 Oct  4 16:54 statistics.c
polk:vu0062> cat makefile

hw11:hw11.c
gcc -o hw11 hw11.c -lm

italian:italian.c
gcc -o italian italian.c -lm

absvalbytype:absvalbytype.c
gcc -o absvalbytype absvalbytype.c -lm

conversions:conversions.c
gcc -o conversions conversions.c -lm

statistics:statistics.c
gcc -o statistics statistics.c -lm

circlecalc:circlecalc.c
gcc -o circlecalc circlecalc.c -lm

census:census.c
gcc -o census census.c

read_list:read_list.c
gcc -o read_list read_list.c

my_number:my_number.c
gcc -o my_number my_number.c

clean:
rm -f my_number
rm -f read_list
rm -f census
rm -f conversions
rm -f statistics
rm -f circlecalc
rm -f absvalbytype
rm -f italian
rm -f hw11
polk:vu0062> cat hw11.c

/*
 * External Source: https://www.youtube.com/watch?v=5nyMb7hJ7Xs
 * 
 */

/*
 * imports
 */
#include <stdio.h>
#include <stdlib.h>

/*
 * main
 */
int main()
{
    /*
     * variables
     */
    const int program_success_code = 0;
    const int program_fail_code = -1;
    const int nothing = 0;
    int positives = 0;
    int negatives = 0;
    int zeros = 0;
    int length;
    int k;
    int value;
    float* array = (float*)NULL;

    /*
     * greeting
     */
    printf("Hello user.\n");

    /*
     * get length of array
     */
    printf("Please input the length of your array.\n");
    scanf("%d", &length);

    /*
     * idiotproof length
     */
    if (length <= nothing) {
        printf("You cannot have a length less than or equal to %d.\n", nothing);
        exit(program_fail_code);
    }

    /*
     * memory allocate the array with the length
     */
    array = (float*)malloc(sizeof(float) * length);

    /*
     * check if memory allocation worked
     */
    if (array == (float*)NULL) {
        printf("Could not allocate memory for array.\n");
        exit(program_fail_code);
    }

    /*
     * get the values of the array
     */
    for (k = nothing; k < length; k++) {
        printf("array[%d]=", k);
        scanf("%f", &array[k]);
    }

    /*
     * check if elements are equal to nothing
     */
    for (k = nothing; k < length; k++) {
        value = array[k];
        if (value == nothing) {
            zeros++;
        }
    }

    /*
     * check if elements are less than zero or negative
     */
    for (k = nothing; k < length; k++) {
        value = array[k];
        if (value < 0) {
            negatives++;
        }
    }

    /*
     * check if elements are greater than zero or positive
     */
    for (k = nothing; k < length; k++) {
        value = array[k];
        if (value > 0) {
            positives++;
        }
    }

    /*
     * outputs the results
     */
    printf("There are %d negatives.\n", negatives);
    printf("There are %d zeros.\n", zeros);
    printf("There are %d positives.\n", positives);

    /*
     * free array from memory
     */
    free(array);
    array = (float*)NULL;

    /*
     * return
     */
    return program_success_code;
}polk:vu0062> make clean
rm -f my_number
rm -f read_list
rm -f census
rm -f conversions
rm -f statistics
rm -f circlecalc
rm -f absvalbytype
rm -f italian
rm -f hw11
polk:vu0062> make hw11
gcc -o hw11 hw11.c -lm
polk:vu0062> hw11
Hello user.
Please input the length of your array.
10
array[0]=-4
array[1]=-5
array[2]=8
array[3]=9
array[4]=0
array[5]=0
array[6]=7
array[7]=4
array[8]=3
array[9]=1
There are 2 negatives.
There are 2 zeros.
There are 6 positives.
polk:vu0062> ^Dexit

Script done on Wed 02 Nov 2022 05:15:46 PM CDT
